{
  "contractName": "SmartContribute",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsRetracted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "issueBounties",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "issuerFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gitId",
          "type": "string"
        }
      ],
      "name": "fundIssuer",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "issueId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gitId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        }
      ],
      "name": "registerIssue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "issueId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "gitId",
          "type": "string"
        }
      ],
      "name": "cancelBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gitId",
          "type": "string"
        }
      ],
      "name": "registerHunter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "issueId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "hunterGitId",
          "type": "string"
        }
      ],
      "name": "claimBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "gitId",
          "type": "string"
        }
      ],
      "name": "claimFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "terminate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRetracted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"issueId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gitId\",\"type\":\"string\"}],\"name\":\"cancelBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"issueId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hunterGitId\",\"type\":\"string\"}],\"name\":\"claimBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gitId\",\"type\":\"string\"}],\"name\":\"claimFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gitId\",\"type\":\"string\"}],\"name\":\"fundIssuer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"issueBounties\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"issuerFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"gitId\",\"type\":\"string\"}],\"name\":\"registerHunter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"issueId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gitId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"}],\"name\":\"registerIssue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terminate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancelBounty(string,string)\":{\"params\":{\"gitId\":\"The GitHub ID of the issuer associated with the issue\",\"issueId\":\"The unique identifier of the issue\"}},\"claimBounty(string,string)\":{\"params\":{\"hunterGitId\":\"The GitHub ID of the hunter claiming the bounty\",\"issueId\":\"The unique identifier of the issue\"}},\"claimFund(string)\":{\"params\":{\"gitId\":\"The GitHub ID of the issuer\"}},\"constructor\":{\"details\":\"Constructor function initializes the contract with the address of the deployer\"},\"fundIssuer(string)\":{\"params\":{\"gitId\":\"The GitHub ID of the issuer\"}},\"registerHunter(string)\":{\"params\":{\"gitId\":\"The GitHub ID of the hunter\"}},\"registerIssue(string,string,uint256)\":{\"params\":{\"bounty\":\"The bounty amount to be allocated to the issue using Wei as unit\",\"gitId\":\"The GitHub ID of the issuer associated with the issue\",\"issueId\":\"The unique identifier of the issue\"}},\"terminate()\":{\"details\":\"Terminates the contract and sends remaining funds to the minter\"}},\"title\":\"SmartContribute: A contract for managing funds and bounties for open source contributions\",\"version\":1},\"userdoc\":{\"events\":{\"FundsAdded(address,uint256)\":{\"notice\":\"Event emitted when funds are added to the contract\"},\"FundsRetracted(address,uint256)\":{\"notice\":\"Event emitted when funds are retracted from the contract\"}},\"kind\":\"user\",\"methods\":{\"cancelBounty(string,string)\":{\"notice\":\"Cancels a bounty associated with a specific issue and returns the fund to the issuer\"},\"claimBounty(string,string)\":{\"notice\":\"Allows a hunter to claim the bounty for a specific issue\"},\"claimFund(string)\":{\"notice\":\"Allows an issuer to claim their available funds\"},\"fundIssuer(string)\":{\"notice\":\"Allows an issuer to fund their account with ETH or register upon first call\"},\"issueBounties(string)\":{\"notice\":\"Mapping of issue IDs to available bounties\"},\"issuerFunds(string)\":{\"notice\":\"Mapping of GitHub IDs to available funds for issuers\"},\"minter()\":{\"notice\":\"The address of the contract deployer, also known as the minter\"},\"registerHunter(string)\":{\"notice\":\"Registers a hunter by storing their wallet address\"},\"registerIssue(string,string,uint256)\":{\"notice\":\"Registers an issue and allocates a bounty to it (or adds to the existing)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SmartContribute.sol\":\"SmartContribute\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/SmartContribute.sol\":{\"keccak256\":\"0xeed8c4dfd287496cdb1e6549dafa4c93b396e10e73a94eb203b2af2ad6b4e194\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f44b99ab44b33606e5bbcc2ff03cb70e2fc05f2361869a5ad9fe477d157e0772\",\"dweb:/ipfs/QmdPpUXWopnhJtmCKZk13C58NhszPivrQAvMHZMXTzviU6\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610c6b806100326000396000f3fe6080604052600436106100915760003560e01c806389f7deed1161005957806389f7deed146101885780639222dd26146101a8578063c586018d146101c8578063e8097c80146101e8578063feee77071461020857600080fd5b806307546172146100965780630c08bf88146100d35780632b6f0495146100ea57806346c6e7221461010a5780637ee119ee14610150575b600080fd5b3480156100a257600080fd5b506000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100df57600080fd5b506100e861021b565b005b3480156100f657600080fd5b506100e8610105366004610ab6565b61029c565b34801561011657600080fd5b50610142610125366004610ab6565b805160208183018101805160028252928201919093012091525481565b6040519081526020016100ca565b34801561015c57600080fd5b5061014261016b366004610ab6565b805160208183018101805160048252928201919093012091525481565b34801561019457600080fd5b506100e86101a3366004610ab6565b6102e5565b3480156101b457600080fd5b506100e86101c3366004610af3565b61046e565b3480156101d457600080fd5b506100e86101e3366004610af3565b6105d0565b3480156101f457600080fd5b506100e8610203366004610b57565b610738565b6100e8610216366004610ab6565b6108b0565b6000546001600160a01b0316331461028e5760405162461bcd60e51b815260206004820152602b60248201527f4f6e6c7920746865206d696e7465722063616e207465726d696e61746520746860448201526a6520636f6e74726163742160a81b60648201526084015b60405180910390fd5b6000546001600160a01b0316ff5b6000339050806003836040516102b29190610bc4565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b60006001826040516102f79190610bc4565b908152604051908190036020019020546001600160a01b031690508061035f5760405162461bcd60e51b815260206004820152601760248201527f4d697373696e6720636c61696d696e672077616c6c65740000000000000000006044820152606401610285565b60006002836040516103719190610bc4565b9081526020016040518091039020549050600081116103cb5760405162461bcd60e51b8152602060048201526016602482015275135a5cdcda5b99c8185d985a5b18589b1948199d5b9960521b6044820152606401610285565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610401573d6000803e3d6000fd5b5060006002846040516104149190610bc4565b908152602001604051809103902081905550816001600160a01b03167f3daf4eb29b0a47a5ad42f34b5f126843b185367beba424555d8f2434aa7143cd8260405161046191815260200190565b60405180910390a2505050565b60006003826040516104809190610bc4565b908152604051908190036020018120546001600160a01b031691506000906004906104ac908690610bc4565b9081526040519081900360200190205490506001600160a01b038216158015906104d65750600081115b61052c5760405162461bcd60e51b815260206004820152602160248201527f4d697373696e6720636c61696d696e672077616c6c6574206f7220626f756e746044820152607960f81b6064820152608401610285565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610562573d6000803e3d6000fd5b5060006004856040516105759190610bc4565b908152602001604051809103902081905550816001600160a01b03167f3daf4eb29b0a47a5ad42f34b5f126843b185367beba424555d8f2434aa7143cd826040516105c291815260200190565b60405180910390a250505050565b60006004836040516105e29190610bc4565b9081526020016040518091039020541161063e5760405162461bcd60e51b815260206004820152601860248201527f4e6f2066756e647320696e20697373756520626f756e747900000000000000006044820152606401610285565b60006001600160a01b03166001826040516106599190610bc4565b908152604051908190036020019020546001600160a01b0316036106bf5760405162461bcd60e51b815260206004820152601d60248201527f49737375657220646f6573206e6f74206861766520612077616c6c65740000006044820152606401610285565b6004826040516106cf9190610bc4565b9081526020016040518091039020546002826040516106ee9190610bc4565b9081526020016040518091039020600082825461070b9190610c09565b9250508190555060006004836040516107249190610bc4565b908152604051908190036020019020555050565b600060028360405161074a9190610bc4565b9081526020016040518091039020541161079f5760405162461bcd60e51b8152602060048201526016602482015275135a5cdcda5b99c8185d985a5b18589b1948199d5b9960521b6044820152606401610285565b806002836040516107b09190610bc4565b90815260200160405180910390205410156108015760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f7567682066756e64732160781b6044820152606401610285565b806002836040516108129190610bc4565b9081526020016040518091039020600082825461082f9190610c22565b9250508190555060006004846040516108489190610bc4565b908152602001604051809103902054111561088a5760048360405161086d9190610bc4565b908152602001604051809103902054816108879190610c09565b90505b8060048460405161089b9190610bc4565b90815260405190819003602001902055505050565b6000339050806001836040516108c69190610bc4565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055346109685760405162461bcd60e51b815260206004820152603960248201527f526567697374726174696f6e2066656520697320696e636f72726563743b207060448201527f6c6561736520636865636b20616e642074727920616761696e000000000000006064820152608401610285565b6000349050600060028460405161097f9190610bc4565b90815260200160405180910390205411156109c1576002836040516109a49190610bc4565b908152602001604051809103902054816109be9190610c09565b90505b806002846040516109d29190610bc4565b908152604051602091819003820181209290925534825230917f8fe10ae416f22f5e5220b0018a6c1d4ff534d6aa3a471f2a20cb7747fe63e5b99101610461565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a3a57600080fd5b813567ffffffffffffffff80821115610a5557610a55610a13565b604051601f8301601f19908116603f01168101908282118183101715610a7d57610a7d610a13565b81604052838152866020858801011115610a9657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610ac857600080fd5b813567ffffffffffffffff811115610adf57600080fd5b610aeb84828501610a29565b949350505050565b60008060408385031215610b0657600080fd5b823567ffffffffffffffff80821115610b1e57600080fd5b610b2a86838701610a29565b93506020850135915080821115610b4057600080fd5b50610b4d85828601610a29565b9150509250929050565b600080600060608486031215610b6c57600080fd5b833567ffffffffffffffff80821115610b8457600080fd5b610b9087838801610a29565b94506020860135915080821115610ba657600080fd5b50610bb386828701610a29565b925050604084013590509250925092565b6000825160005b81811015610be55760208186018101518583015201610bcb565b506000920191825250919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c1c57610c1c610bf3565b92915050565b81810381811115610c1c57610c1c610bf356fea26469706673582212205df1b9617a364c686c806cf8c7ab2526d1397081628f951baa6743a734c5e43864736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c806389f7deed1161005957806389f7deed146101885780639222dd26146101a8578063c586018d146101c8578063e8097c80146101e8578063feee77071461020857600080fd5b806307546172146100965780630c08bf88146100d35780632b6f0495146100ea57806346c6e7221461010a5780637ee119ee14610150575b600080fd5b3480156100a257600080fd5b506000546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100df57600080fd5b506100e861021b565b005b3480156100f657600080fd5b506100e8610105366004610ab6565b61029c565b34801561011657600080fd5b50610142610125366004610ab6565b805160208183018101805160028252928201919093012091525481565b6040519081526020016100ca565b34801561015c57600080fd5b5061014261016b366004610ab6565b805160208183018101805160048252928201919093012091525481565b34801561019457600080fd5b506100e86101a3366004610ab6565b6102e5565b3480156101b457600080fd5b506100e86101c3366004610af3565b61046e565b3480156101d457600080fd5b506100e86101e3366004610af3565b6105d0565b3480156101f457600080fd5b506100e8610203366004610b57565b610738565b6100e8610216366004610ab6565b6108b0565b6000546001600160a01b0316331461028e5760405162461bcd60e51b815260206004820152602b60248201527f4f6e6c7920746865206d696e7465722063616e207465726d696e61746520746860448201526a6520636f6e74726163742160a81b60648201526084015b60405180910390fd5b6000546001600160a01b0316ff5b6000339050806003836040516102b29190610bc4565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b60006001826040516102f79190610bc4565b908152604051908190036020019020546001600160a01b031690508061035f5760405162461bcd60e51b815260206004820152601760248201527f4d697373696e6720636c61696d696e672077616c6c65740000000000000000006044820152606401610285565b60006002836040516103719190610bc4565b9081526020016040518091039020549050600081116103cb5760405162461bcd60e51b8152602060048201526016602482015275135a5cdcda5b99c8185d985a5b18589b1948199d5b9960521b6044820152606401610285565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610401573d6000803e3d6000fd5b5060006002846040516104149190610bc4565b908152602001604051809103902081905550816001600160a01b03167f3daf4eb29b0a47a5ad42f34b5f126843b185367beba424555d8f2434aa7143cd8260405161046191815260200190565b60405180910390a2505050565b60006003826040516104809190610bc4565b908152604051908190036020018120546001600160a01b031691506000906004906104ac908690610bc4565b9081526040519081900360200190205490506001600160a01b038216158015906104d65750600081115b61052c5760405162461bcd60e51b815260206004820152602160248201527f4d697373696e6720636c61696d696e672077616c6c6574206f7220626f756e746044820152607960f81b6064820152608401610285565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610562573d6000803e3d6000fd5b5060006004856040516105759190610bc4565b908152602001604051809103902081905550816001600160a01b03167f3daf4eb29b0a47a5ad42f34b5f126843b185367beba424555d8f2434aa7143cd826040516105c291815260200190565b60405180910390a250505050565b60006004836040516105e29190610bc4565b9081526020016040518091039020541161063e5760405162461bcd60e51b815260206004820152601860248201527f4e6f2066756e647320696e20697373756520626f756e747900000000000000006044820152606401610285565b60006001600160a01b03166001826040516106599190610bc4565b908152604051908190036020019020546001600160a01b0316036106bf5760405162461bcd60e51b815260206004820152601d60248201527f49737375657220646f6573206e6f74206861766520612077616c6c65740000006044820152606401610285565b6004826040516106cf9190610bc4565b9081526020016040518091039020546002826040516106ee9190610bc4565b9081526020016040518091039020600082825461070b9190610c09565b9250508190555060006004836040516107249190610bc4565b908152604051908190036020019020555050565b600060028360405161074a9190610bc4565b9081526020016040518091039020541161079f5760405162461bcd60e51b8152602060048201526016602482015275135a5cdcda5b99c8185d985a5b18589b1948199d5b9960521b6044820152606401610285565b806002836040516107b09190610bc4565b90815260200160405180910390205410156108015760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f7567682066756e64732160781b6044820152606401610285565b806002836040516108129190610bc4565b9081526020016040518091039020600082825461082f9190610c22565b9250508190555060006004846040516108489190610bc4565b908152602001604051809103902054111561088a5760048360405161086d9190610bc4565b908152602001604051809103902054816108879190610c09565b90505b8060048460405161089b9190610bc4565b90815260405190819003602001902055505050565b6000339050806001836040516108c69190610bc4565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b0319909216919091179055346109685760405162461bcd60e51b815260206004820152603960248201527f526567697374726174696f6e2066656520697320696e636f72726563743b207060448201527f6c6561736520636865636b20616e642074727920616761696e000000000000006064820152608401610285565b6000349050600060028460405161097f9190610bc4565b90815260200160405180910390205411156109c1576002836040516109a49190610bc4565b908152602001604051809103902054816109be9190610c09565b90505b806002846040516109d29190610bc4565b908152604051602091819003820181209290925534825230917f8fe10ae416f22f5e5220b0018a6c1d4ff534d6aa3a471f2a20cb7747fe63e5b99101610461565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a3a57600080fd5b813567ffffffffffffffff80821115610a5557610a55610a13565b604051601f8301601f19908116603f01168101908282118183101715610a7d57610a7d610a13565b81604052838152866020858801011115610a9657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610ac857600080fd5b813567ffffffffffffffff811115610adf57600080fd5b610aeb84828501610a29565b949350505050565b60008060408385031215610b0657600080fd5b823567ffffffffffffffff80821115610b1e57600080fd5b610b2a86838701610a29565b93506020850135915080821115610b4057600080fd5b50610b4d85828601610a29565b9150509250929050565b600080600060608486031215610b6c57600080fd5b833567ffffffffffffffff80821115610b8457600080fd5b610b9087838801610a29565b94506020860135915080821115610ba657600080fd5b50610bb386828701610a29565b925050604084013590509250925092565b6000825160005b81811015610be55760208186018101518583015201610bcb565b506000920191825250919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c1c57610c1c610bf3565b92915050565b81810381811115610c1c57610c1c610bf356fea26469706673582212205df1b9617a364c686c806cf8c7ab2526d1397081628f951baa6743a734c5e43864736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6562:1",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:1",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:1"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:1",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:1",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:1",
                "type": ""
              }
            ],
            "src": "14:203:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "254:95:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "271:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "278:3:1",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "283:10:1",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "264:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:31:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "264:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "311:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "314:4:1",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "304:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "335:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "338:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "328:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "328:15:1"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "222:127:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "407:666:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "456:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "465:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "468:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "458:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "458:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "458:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "435:6:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "443:4:1",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "431:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "431:17:1"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "450:3:1"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "427:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "427:27:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "420:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "420:35:1"
                  },
                  "nodeType": "YulIf",
                  "src": "417:55:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "481:30:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "504:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "491:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "491:20:1"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "485:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "520:28:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "530:18:1",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "524:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "571:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "573:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "573:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "573:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "563:2:1"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "567:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "560:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "560:10:1"
                  },
                  "nodeType": "YulIf",
                  "src": "557:36:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "602:17:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "616:2:1",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "612:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "612:7:1"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "606:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "628:23:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "648:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "642:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "642:9:1"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "632:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "660:71:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "682:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "706:2:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "710:4:1",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "702:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "702:13:1"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "717:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "698:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "698:22:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "722:2:1",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "694:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "694:31:1"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "727:2:1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "690:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "690:40:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "678:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "678:53:1"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "664:10:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "790:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "792:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "792:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "792:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "749:10:1"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "761:2:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "746:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "746:18:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "769:10:1"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "781:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "766:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "766:22:1"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "743:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:46:1"
                  },
                  "nodeType": "YulIf",
                  "src": "740:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "828:2:1",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "832:10:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "821:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "821:22:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "821:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "859:6:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "867:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "852:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:18:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "852:18:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "918:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "927:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "930:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "920:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "920:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "920:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "893:6:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "901:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "889:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "889:15:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "906:4:1",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "885:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "885:26:1"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "913:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "882:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "882:35:1"
                  },
                  "nodeType": "YulIf",
                  "src": "879:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "960:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "968:4:1",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "956:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "956:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "979:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "987:4:1",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "975:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "975:17:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "994:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "943:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "943:54:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "943:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1021:6:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1029:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1017:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1017:15:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1034:4:1",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1013:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1013:26:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1041:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1006:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1006:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1006:37:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1052:15:1",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1061:6:1"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1052:5:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "381:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "389:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "397:5:1",
                "type": ""
              }
            ],
            "src": "354:719:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1158:242:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1204:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1213:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1216:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1206:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1206:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1206:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1179:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1188:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1175:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1175:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1200:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1171:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1171:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1168:52:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1229:37:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1256:9:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1243:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1243:23:1"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1233:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1309:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1318:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1321:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1311:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1311:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1311:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1281:6:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1289:18:1",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1278:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1278:30:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1275:50:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1334:60:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1366:9:1"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1377:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1362:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1362:22:1"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1386:7:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1344:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1344:50:1"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1334:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1124:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1135:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1147:6:1",
                "type": ""
              }
            ],
            "src": "1078:322:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1506:76:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1516:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1528:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1539:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1524:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1524:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1516:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1558:9:1"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1569:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1551:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1551:25:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1551:25:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1475:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1486:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1497:4:1",
                "type": ""
              }
            ],
            "src": "1405:177:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1694:436:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1740:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1749:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1752:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1742:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1742:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1742:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1715:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1724:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1711:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1711:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1736:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1707:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1707:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1704:52:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1765:37:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1792:9:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1779:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:23:1"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1769:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1811:28:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1821:18:1",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1815:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1866:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1875:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1878:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1868:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1868:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1868:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1854:6:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1862:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1851:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:14:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1848:34:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1891:60:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1923:9:1"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1934:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1919:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1919:22:1"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1943:7:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1901:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1901:50:1"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1891:6:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1960:48:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1993:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2004:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1989:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1989:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1976:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1976:32:1"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1964:8:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2037:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2046:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2049:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2039:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2039:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2039:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2023:8:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2033:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2020:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2020:16:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2017:36:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2062:62:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2094:9:1"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2105:8:1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2090:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2090:24:1"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2116:7:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2072:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2072:52:1"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2062:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1652:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1663:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1675:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1683:6:1",
                "type": ""
              }
            ],
            "src": "1587:543:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2259:487:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2305:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2314:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2317:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2307:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2307:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2307:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2280:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2289:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2276:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2276:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2301:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2272:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2272:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2269:52:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2330:37:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2357:9:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2344:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:23:1"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2334:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2376:28:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2386:18:1",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2380:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2431:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2440:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2443:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2433:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2433:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2433:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2419:6:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2427:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2416:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2416:14:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2413:34:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2456:60:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2488:9:1"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2499:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2484:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2484:22:1"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2508:7:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2466:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:50:1"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2456:6:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2525:48:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2558:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2569:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2554:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2554:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2541:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2541:32:1"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2529:8:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2602:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2611:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2614:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2604:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2604:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2604:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2588:8:1"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2598:2:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2585:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2585:16:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2582:36:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2627:62:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2659:9:1"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2670:8:1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2655:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2655:24:1"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2681:7:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2637:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2637:52:1"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2627:6:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2698:42:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2725:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2736:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2721:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2721:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2708:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2708:32:1"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2698:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2209:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2220:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2232:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2240:6:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2248:6:1",
                "type": ""
              }
            ],
            "src": "2135:611:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2925:233:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2942:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2953:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2935:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2935:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2935:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2976:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2987:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2972:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2972:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2992:2:1",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2965:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2965:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2965:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3015:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3026:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3011:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3011:18:1"
                      },
                      {
                        "hexValue": "4f6e6c7920746865206d696e7465722063616e207465726d696e617465207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3031:34:1",
                        "type": "",
                        "value": "Only the minter can terminate th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3004:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3004:62:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3004:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3086:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3097:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3082:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3082:18:1"
                      },
                      {
                        "hexValue": "6520636f6e747261637421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3102:13:1",
                        "type": "",
                        "value": "e contract!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3075:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3075:41:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3075:41:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3125:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3137:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3148:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3133:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3133:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3125:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9a71be632453bb6e747bb1882d22e0306b0c05327f59ddc64f1df7d74221d5f7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2902:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2916:4:1",
                "type": ""
              }
            ],
            "src": "2751:407:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3302:275:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3312:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3332:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3326:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:13:1"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3316:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3348:10:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3357:1:1",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3352:1:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3419:77:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3444:3:1"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3449:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3440:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3440:11:1"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3467:6:1"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3475:1:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3463:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3463:14:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3479:4:1",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3459:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3459:25:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3453:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3453:32:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3433:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3433:53:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3433:53:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3378:1:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3381:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3375:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3375:13:1"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3389:21:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3391:17:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3400:1:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3403:4:1",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3396:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3396:12:1"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3391:1:1"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3371:3:1",
                    "statements": []
                  },
                  "src": "3367:129:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3505:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3519:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3524:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3515:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3515:16:1"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3509:2:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3547:2:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3551:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3540:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3540:13:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3540:13:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3562:9:1",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "3569:2:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3562:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3278:3:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3283:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3294:3:1",
                "type": ""
              }
            ],
            "src": "3163:414:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3756:173:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3773:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3784:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3766:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3766:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3766:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3807:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3818:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3803:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3803:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3823:2:1",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3796:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3796:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3796:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3846:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3857:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3842:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3842:18:1"
                      },
                      {
                        "hexValue": "4d697373696e6720636c61696d696e672077616c6c6574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3862:25:1",
                        "type": "",
                        "value": "Missing claiming wallet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3835:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3835:53:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3835:53:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3897:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3909:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3920:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3905:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3897:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_94fbd6fcac34285c51b97613d3f7aefc522279b84d15a7fb502a04bd8ecdba00__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3733:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3747:4:1",
                "type": ""
              }
            ],
            "src": "3582:347:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4108:172:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4125:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4136:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4118:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4118:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4118:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4159:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4170:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4155:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4155:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4175:2:1",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4148:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4148:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4148:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4198:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4209:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4194:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4194:18:1"
                      },
                      {
                        "hexValue": "4d697373696e6720617661696c61626c652066756e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4214:24:1",
                        "type": "",
                        "value": "Missing available fund"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4187:52:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4187:52:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4248:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4260:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4271:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4256:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4256:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4248:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_299b448de32aeb3e7d0fe644f15ed9d2e0994602a41416e998c1fc59ec41d7c5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4085:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4099:4:1",
                "type": ""
              }
            ],
            "src": "3934:346:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4459:223:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4476:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4487:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4469:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4469:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4469:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4510:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4521:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4506:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4506:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4526:2:1",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4499:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4499:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4499:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4549:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4560:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4545:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4545:18:1"
                      },
                      {
                        "hexValue": "4d697373696e6720636c61696d696e672077616c6c6574206f7220626f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4565:34:1",
                        "type": "",
                        "value": "Missing claiming wallet or bount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4538:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4538:62:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4538:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4620:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4631:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4616:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4616:18:1"
                      },
                      {
                        "hexValue": "79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4636:3:1",
                        "type": "",
                        "value": "y"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4609:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4609:31:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4609:31:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4649:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4661:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4672:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4657:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4657:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4649:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bbc1022071d9f39301adbab71b301e30dce9979df47222891edc40028c87847d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4436:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4450:4:1",
                "type": ""
              }
            ],
            "src": "4285:397:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4861:174:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4878:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4889:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4871:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4871:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4871:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4912:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4923:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4908:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4908:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4928:2:1",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4901:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4901:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4901:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4951:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4962:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4947:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4947:18:1"
                      },
                      {
                        "hexValue": "4e6f2066756e647320696e20697373756520626f756e7479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4967:26:1",
                        "type": "",
                        "value": "No funds in issue bounty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4940:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4940:54:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4940:54:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5003:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5015:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5026:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5011:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5003:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_eb070efb216ce4cd561b7dbb2dcdf6e5ce5fbe7262881d9d2a05cb5c7d6c64c3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4838:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4852:4:1",
                "type": ""
              }
            ],
            "src": "4687:348:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5214:179:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5231:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5242:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5224:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5224:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5224:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5265:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5276:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5261:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5261:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5281:2:1",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5254:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5254:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5254:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5304:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5315:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5300:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5300:18:1"
                      },
                      {
                        "hexValue": "49737375657220646f6573206e6f74206861766520612077616c6c6574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5320:31:1",
                        "type": "",
                        "value": "Issuer does not have a wallet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5293:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5293:59:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5293:59:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5361:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5373:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5384:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5369:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5369:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5361:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c708fbb8b46af056e7e8e06a013787187f519ec4f2a20e38fdc437e4dd3992e3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5191:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5205:4:1",
                "type": ""
              }
            ],
            "src": "5040:353:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5430:95:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5447:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5454:3:1",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5459:10:1",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5450:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5450:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5440:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5440:31:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5440:31:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5487:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5490:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5480:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5480:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5480:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5511:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5514:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5504:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5504:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5504:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5398:127:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5578:77:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5588:16:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5599:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5602:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5595:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5595:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5588:3:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5627:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5629:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5629:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5629:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5619:1:1"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "5622:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5616:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5616:10:1"
                  },
                  "nodeType": "YulIf",
                  "src": "5613:36:1"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5561:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5564:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5570:3:1",
                "type": ""
              }
            ],
            "src": "5530:125:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5834:167:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5851:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5862:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5844:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5844:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5844:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5885:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5896:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5881:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5881:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5901:2:1",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5874:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5874:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5874:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5924:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5935:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5920:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5920:18:1"
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e647321",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5940:19:1",
                        "type": "",
                        "value": "Not enough funds!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5913:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5913:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5913:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5969:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5981:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5992:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5977:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5977:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5969:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a531843416d86fba93b800a44804953a0da265aecb2cfb6c4758e5242e81e2bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5811:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5825:4:1",
                "type": ""
              }
            ],
            "src": "5660:341:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6055:79:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6065:17:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6077:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6080:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6073:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6073:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6065:4:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6106:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6108:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6108:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6108:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "6097:4:1"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6103:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6094:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6094:11:1"
                  },
                  "nodeType": "YulIf",
                  "src": "6091:37:1"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6037:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6040:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6046:4:1",
                "type": ""
              }
            ],
            "src": "6006:128:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6313:247:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6330:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6341:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6323:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6323:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6323:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6364:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6375:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6360:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6360:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6380:2:1",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6353:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6353:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6353:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6403:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6414:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6399:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6399:18:1"
                      },
                      {
                        "hexValue": "526567697374726174696f6e2066656520697320696e636f72726563743b2070",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6419:34:1",
                        "type": "",
                        "value": "Registration fee is incorrect; p"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6392:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6392:62:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6392:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6474:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6485:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6470:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6470:18:1"
                      },
                      {
                        "hexValue": "6c6561736520636865636b20616e642074727920616761696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6490:27:1",
                        "type": "",
                        "value": "lease check and try again"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6463:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6463:55:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6463:55:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6527:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6539:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6550:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6535:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6535:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6527:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4fe07bfcf76a80823c5f1eaefbe7720d3fc10a5b53256a8cd5d96881afb62d53__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6290:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6304:4:1",
                "type": ""
              }
            ],
            "src": "6139:421:1"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_9a71be632453bb6e747bb1882d22e0306b0c05327f59ddc64f1df7d74221d5f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Only the minter can terminate th\")\n        mstore(add(headStart, 96), \"e contract!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_94fbd6fcac34285c51b97613d3f7aefc522279b84d15a7fb502a04bd8ecdba00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Missing claiming wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_299b448de32aeb3e7d0fe644f15ed9d2e0994602a41416e998c1fc59ec41d7c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Missing available fund\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bbc1022071d9f39301adbab71b301e30dce9979df47222891edc40028c87847d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Missing claiming wallet or bount\")\n        mstore(add(headStart, 96), \"y\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_eb070efb216ce4cd561b7dbb2dcdf6e5ce5fbe7262881d9d2a05cb5c7d6c64c3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"No funds in issue bounty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c708fbb8b46af056e7e8e06a013787187f519ec4f2a20e38fdc437e4dd3992e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Issuer does not have a wallet\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_a531843416d86fba93b800a44804953a0da265aecb2cfb6c4758e5242e81e2bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Not enough funds!\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_4fe07bfcf76a80823c5f1eaefbe7720d3fc10a5b53256a8cd5d96881afb62d53__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"Registration fee is incorrect; p\")\n        mstore(add(headStart, 96), \"lease check and try again\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "162:4808:0:-:0;;;1141:52;;;;;;;;;-1:-1:-1;1166:6:0;:19;;-1:-1:-1;;;;;;1166:19:0;1175:10;1166:19;;;162:4808;;;;;;",
  "deployedSourceMap": "162:4808:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:21;;;;;;;;;;-1:-1:-1;274:21:0;;;;-1:-1:-1;;;;;274:21:0;;;;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;274:21:0;;;;;;;;4804:163;;;;;;;;;;;;;:::i;:::-;;3373:140;;;;;;;;;;-1:-1:-1;3373:140:0;;;;;:::i;:::-;;:::i;493:45::-;;;;;;;;;;-1:-1:-1;493:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:25:1;;;1539:2;1524:18;493:45:0;1405:177:1;726:47:0;;;;;;;;;;-1:-1:-1;726:47:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4278:440;;;;;;;;;;-1:-1:-1;4278:440:0;;;;;:::i;:::-;;:::i;3730:425::-;;;;;;;;;;-1:-1:-1;3730:425:0;;;;;:::i;:::-;;:::i;2909:338::-;;;;;;;;;;-1:-1:-1;2909:338:0;;;;;:::i;:::-;;:::i;2239:425::-;;;;;;;;;;-1:-1:-1;2239:425:0;;;;;:::i;:::-;;:::i;1348:569::-;;;;;;:::i;:::-;;:::i;4804:163::-;4865:6;;-1:-1:-1;;;;;4865:6:0;4851:10;:20;4843:76;;;;-1:-1:-1;;;4843:76:0;;2953:2:1;4843:76:0;;;2935:21:1;2992:2;2972:18;;;2965:30;3031:34;3011:18;;;3004:62;-1:-1:-1;;;3082:18:1;;;3075:41;3133:19;;4843:76:0;;;;;;;;;4951:6;;-1:-1:-1;;;;;4951:6:0;4930:29;3373:140;3438:14;3455:10;3438:27;;3499:6;3476:13;3490:5;3476:20;;;;;;:::i;:::-;;;;;;;;;;;;;;:29;;-1:-1:-1;;;;;3476:29:0;;;;-1:-1:-1;;;;;;3476:29:0;;;;;;;;;-1:-1:-1;;3373:140:0:o;4278:440::-;4338:14;4355:13;4369:5;4355:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;4355:20:0;;-1:-1:-1;4355:20:0;4386:56;;;;-1:-1:-1;;;4386:56:0;;3784:2:1;4386:56:0;;;3766:21:1;3823:2;3803:18;;;3796:30;3862:25;3842:18;;;3835:53;3905:18;;4386:56:0;3582:347:1;4386:56:0;4455:21;4479:11;4491:5;4479:18;;;;;;:::i;:::-;;;;;;;;;;;;;;4455:42;;4532:1;4516:13;:17;4508:52;;;;-1:-1:-1;;;4508:52:0;;4136:2:1;4508:52:0;;;4118:21:1;4175:2;4155:18;;;4148:30;-1:-1:-1;;;4194:18:1;;;4187:52;4256:18;;4508:52:0;3934:346:1;4508:52:0;4573:39;;-1:-1:-1;;;;;4573:24:0;;;:39;;;;;4598:13;;4573:39;;;;4598:13;4573:24;:39;;;;;;;;;;;;;;;;;;;;;4654:1;4633:11;4645:5;4633:18;;;;;;:::i;:::-;;;;;;;;;;;;;:22;;;;4688:6;-1:-1:-1;;;;;4673:37:0;;4696:13;4673:37;;;;1551:25:1;;1539:2;1524:18;;1405:177;4673:37:0;;;;;;;;4327:391;;4278:440;:::o;3730:425::-;3821:14;3838:13;3852:11;3838:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;3838:26:0;;-1:-1:-1;3838:26:0;;3892:13;;:22;;3906:7;;3892:22;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3935:20:0;;;;;;:34;;;3968:1;3959:6;:10;3935:34;3927:80;;;;-1:-1:-1;;;3927:80:0;;4487:2:1;3927:80:0;;;4469:21:1;4526:2;4506:18;;;4499:30;4565:34;4545:18;;;4538:62;-1:-1:-1;;;4616:18:1;;;4609:31;4657:19;;3927:80:0;4285:397:1;3927:80:0;4028:32;;-1:-1:-1;;;;;4028:24:0;;;:32;;;;;4053:6;;4028:32;;;;4053:6;4028:24;:32;;;;;;;;;;;;;;;;;;;;;4098:1;4073:13;4087:7;4073:22;;;;;;:::i;:::-;;;;;;;;;;;;;:26;;;;4132:6;-1:-1:-1;;;;;4117:30:0;;4140:6;4117:30;;;;1551:25:1;;1539:2;1524:18;;1405:177;4117:30:0;;;;;;;;3810:345;;3730:425;;:::o;2909:338::-;3028:1;3003:13;3017:7;3003:22;;;;;;:::i;:::-;;;;;;;;;;;;;;:26;2995:63;;;;-1:-1:-1;;;2995:63:0;;4889:2:1;2995:63:0;;;4871:21:1;4928:2;4908:18;;;4901:30;4967:26;4947:18;;;4940:54;5011:18;;2995:63:0;4687:348:1;2995:63:0;3109:1;-1:-1:-1;;;;;3077:34:0;:13;3091:5;3077:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;3077:20:0;:34;3069:76;;;;-1:-1:-1;;;3069:76:0;;5242:2:1;3069:76:0;;;5224:21:1;5281:2;5261:18;;;5254:30;5320:31;5300:18;;;5293:59;5369:18;;3069:76:0;5040:353:1;3069:76:0;3180:13;3194:7;3180:22;;;;;;:::i;:::-;;;;;;;;;;;;;;3158:11;3170:5;3158:18;;;;;;:::i;:::-;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;3238:1;3213:13;3227:7;3213:22;;;;;;:::i;:::-;;;;;;;;;;;;;;:26;-1:-1:-1;;2909:338:0:o;2239:425::-;2371:1;2350:11;2362:5;2350:18;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;2342:57;;;;-1:-1:-1;;;2342:57:0;;4136:2:1;2342:57:0;;;4118:21:1;4175:2;4155:18;;;4148:30;-1:-1:-1;;;4194:18:1;;;4187:52;4256:18;;2342:57:0;3934:346:1;2342:57:0;2440:6;2418:11;2430:5;2418:18;;;;;;:::i;:::-;;;;;;;;;;;;;;:28;;2410:58;;;;-1:-1:-1;;;2410:58:0;;5862:2:1;2410:58:0;;;5844:21:1;5901:2;5881:18;;;5874:30;-1:-1:-1;;;5920:18:1;;;5913:47;5977:18;;2410:58:0;5660:341:1;2410:58:0;2503:6;2481:11;2493:5;2481:18;;;;;;:::i;:::-;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;2551:1;2526:13;2540:7;2526:22;;;;;;:::i;:::-;;;;;;;;;;;;;;:26;2522:91;;;2579:13;2593:7;2579:22;;;;;;:::i;:::-;;;;;;;;;;;;;;2569:32;;;;;:::i;:::-;;;2522:91;2650:6;2625:13;2639:7;2625:22;;;;;;:::i;:::-;;;;;;;;;;;;;;:31;-1:-1:-1;;;2239:425:0:o;1348:569::-;1448:14;1465:10;1448:27;;1509:6;1486:13;1500:5;1486:20;;;;;;:::i;:::-;;;;;;;;;;;;;;:29;;-1:-1:-1;;;;;1486:29:0;;;;-1:-1:-1;;;;;;1486:29:0;;;;;;;;;1536:9;1528:83;;;;-1:-1:-1;;;1528:83:0;;6341:2:1;1528:83:0;;;6323:21:1;6380:2;6360:18;;;6353:30;6419:34;6399:18;;;6392:62;6490:27;6470:18;;;6463:55;6535:19;;1528:83:0;6139:421:1;1528:83:0;1667:21;1691:9;1667:33;;1736:1;1715:11;1727:5;1715:18;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;1711:90;;;1771:11;1783:5;1771:18;;;;;;:::i;:::-;;;;;;;;;;;;;;1754:35;;;;;:::i;:::-;;;1711:90;1842:13;1821:11;1833:5;1821:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;:34;;;;1899:9;1551:25:1;;1892:4:0;;1873:36;;1524:18:1;1873:36:0;1405:177:1;222:127;283:10;278:3;274:20;271:1;264:31;314:4;311:1;304:15;338:4;335:1;328:15;354:719;397:5;450:3;443:4;435:6;431:17;427:27;417:55;;468:1;465;458:12;417:55;504:6;491:20;530:18;567:2;563;560:10;557:36;;;573:18;;:::i;:::-;648:2;642:9;616:2;702:13;;-1:-1:-1;;698:22:1;;;722:2;694:31;690:40;678:53;;;746:18;;;766:22;;;743:46;740:72;;;792:18;;:::i;:::-;832:10;828:2;821:22;867:2;859:6;852:18;913:3;906:4;901:2;893:6;889:15;885:26;882:35;879:55;;;930:1;927;920:12;879:55;994:2;987:4;979:6;975:17;968:4;960:6;956:17;943:54;1041:1;1034:4;1029:2;1021:6;1017:15;1013:26;1006:37;1061:6;1052:15;;;;;;354:719;;;;:::o;1078:322::-;1147:6;1200:2;1188:9;1179:7;1175:23;1171:32;1168:52;;;1216:1;1213;1206:12;1168:52;1256:9;1243:23;1289:18;1281:6;1278:30;1275:50;;;1321:1;1318;1311:12;1275:50;1344;1386:7;1377:6;1366:9;1362:22;1344:50;:::i;:::-;1334:60;1078:322;-1:-1:-1;;;;1078:322:1:o;1587:543::-;1675:6;1683;1736:2;1724:9;1715:7;1711:23;1707:32;1704:52;;;1752:1;1749;1742:12;1704:52;1792:9;1779:23;1821:18;1862:2;1854:6;1851:14;1848:34;;;1878:1;1875;1868:12;1848:34;1901:50;1943:7;1934:6;1923:9;1919:22;1901:50;:::i;:::-;1891:60;;2004:2;1993:9;1989:18;1976:32;1960:48;;2033:2;2023:8;2020:16;2017:36;;;2049:1;2046;2039:12;2017:36;;2072:52;2116:7;2105:8;2094:9;2090:24;2072:52;:::i;:::-;2062:62;;;1587:543;;;;;:::o;2135:611::-;2232:6;2240;2248;2301:2;2289:9;2280:7;2276:23;2272:32;2269:52;;;2317:1;2314;2307:12;2269:52;2357:9;2344:23;2386:18;2427:2;2419:6;2416:14;2413:34;;;2443:1;2440;2433:12;2413:34;2466:50;2508:7;2499:6;2488:9;2484:22;2466:50;:::i;:::-;2456:60;;2569:2;2558:9;2554:18;2541:32;2525:48;;2598:2;2588:8;2585:16;2582:36;;;2614:1;2611;2604:12;2582:36;;2637:52;2681:7;2670:8;2659:9;2655:24;2637:52;:::i;:::-;2627:62;;;2736:2;2725:9;2721:18;2708:32;2698:42;;2135:611;;;;;:::o;3163:414::-;3294:3;3332:6;3326:13;3357:1;3367:129;3381:6;3378:1;3375:13;3367:129;;;3479:4;3463:14;;;3459:25;;3453:32;3440:11;;;3433:53;3396:12;3367:129;;;-1:-1:-1;3551:1:1;3515:16;;3540:13;;;-1:-1:-1;3515:16:1;3163:414;-1:-1:-1;3163:414:1:o;5398:127::-;5459:10;5454:3;5450:20;5447:1;5440:31;5490:4;5487:1;5480:15;5514:4;5511:1;5504:15;5530:125;5595:9;;;5616:10;;;5613:36;;;5629:18;;:::i;:::-;5530:125;;;;:::o;6006:128::-;6073:9;;;6094:11;;;6091:37;;;6108:18;;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/// @title SmartContribute: A contract for managing funds and bounties for open source contributions\r\ncontract SmartContribute {\r\n    /// @notice The address of the contract deployer, also known as the minter\r\n    address public minter;\r\n    /// @notice Mapping of GitHub IDs to issuer wallet addresses\r\n    mapping(string => address) private issuerWallets;\r\n    /// @notice Mapping of GitHub IDs to available funds for issuers\r\n    mapping(string => uint256) public issuerFunds;\r\n    /// @notice Mapping of GitHub IDs to hunter wallet addresses\r\n    mapping(string => address) private hunterWallets;\r\n    /// @notice Mapping of issue IDs to available bounties\r\n    mapping(string => uint256) public issueBounties;\r\n\r\n    /// @notice Event emitted when funds are added to the contract\r\n    event FundsAdded(address indexed by, uint256 amount);\r\n    /// @notice Event emitted when funds are retracted from the contract\r\n    event FundsRetracted(address indexed by, uint256 amount);\r\n\r\n    /// @dev Constructor function initializes the contract with the address of the deployer\r\n    constructor() {\r\n        minter = msg.sender;\r\n    }\r\n    \r\n    /// @notice Allows an issuer to fund their account with ETH or register upon first call\r\n    /// @param gitId The GitHub ID of the issuer\r\n    function fundIssuer(string memory gitId) external payable {\r\n        // Save issuer wallet\r\n        address caller = msg.sender;\r\n        issuerWallets[gitId] = caller;\r\n\r\n        require(msg.value > 0, \"Registration fee is incorrect; please check and try again\");\r\n\r\n        // Check if issuer already exists\r\n        uint256 paymentAmount = msg.value;\r\n        if (issuerFunds[gitId] > 0) {\r\n            paymentAmount += issuerFunds[gitId];\r\n        }\r\n        \r\n        issuerFunds[gitId] = paymentAmount;\r\n\r\n        emit FundsAdded(address(this), msg.value);\r\n    }\r\n\r\n    /// @notice Registers an issue and allocates a bounty to it (or adds to the existing)\r\n    /// @param issueId The unique identifier of the issue\r\n    /// @param gitId The GitHub ID of the issuer associated with the issue\r\n    /// @param bounty The bounty amount to be allocated to the issue using Wei as unit\r\n    function registerIssue(string memory issueId, string memory gitId, uint256 bounty) external {\r\n        require(issuerFunds[gitId] > 0, \"Missing available fund\");\r\n        require(issuerFunds[gitId] >= bounty, \"Not enough funds!\");\r\n\r\n        issuerFunds[gitId] -= bounty;\r\n\r\n        if (issueBounties[issueId] > 0) {\r\n            bounty += issueBounties[issueId];\r\n        }\r\n\r\n        issueBounties[issueId] = bounty;\r\n    }\r\n\r\n    /// @notice Cancels a bounty associated with a specific issue and returns the fund to the issuer\r\n    /// @param issueId The unique identifier of the issue\r\n    /// @param gitId The GitHub ID of the issuer associated with the issue\r\n    function cancelBounty(string memory issueId, string memory gitId) external {\r\n        require(issueBounties[issueId] > 0, \"No funds in issue bounty\");\r\n        require(issuerWallets[gitId] != address(0), \"Issuer does not have a wallet\");\r\n\r\n        issuerFunds[gitId] += issueBounties[issueId];\r\n        issueBounties[issueId] = 0;\r\n    }\r\n\r\n    /// @notice Registers a hunter by storing their wallet address\r\n    /// @param gitId The GitHub ID of the hunter\r\n    function registerHunter(string memory gitId) external {\r\n        address caller = msg.sender;\r\n        hunterWallets[gitId] = caller;\r\n    }\r\n\r\n    /// @notice Allows a hunter to claim the bounty for a specific issue\r\n    /// @param issueId The unique identifier of the issue\r\n    /// @param hunterGitId The GitHub ID of the hunter claiming the bounty\r\n    function claimBounty(string memory issueId, string memory hunterGitId) external {\r\n        address hunter = hunterWallets[hunterGitId];\r\n        uint256 bounty = issueBounties[issueId];\r\n\r\n        require(hunter != address(0) && bounty > 0, \"Missing claiming wallet or bounty\");\r\n        \r\n        payable(hunter).transfer(bounty);\r\n\r\n        issueBounties[issueId] = 0;\r\n\r\n        emit FundsRetracted(hunter, bounty);\r\n    }\r\n\r\n    /// @notice Allows an issuer to claim their available funds\r\n    /// @param gitId The GitHub ID of the issuer\r\n    function claimFund(string memory gitId) external {\r\n        address wallet = issuerWallets[gitId];\r\n        require(wallet != address(0), \"Missing claiming wallet\");\r\n\r\n        uint256 availableFund = issuerFunds[gitId];\r\n        require(availableFund > 0, \"Missing available fund\");\r\n\r\n        payable(wallet).transfer(availableFund);\r\n        \r\n        issuerFunds[gitId] = 0;\r\n\r\n        emit FundsRetracted(wallet, availableFund);\r\n    }\r\n\r\n    /// @dev Terminates the contract and sends remaining funds to the minter\r\n    function terminate() public {\r\n        require(msg.sender == minter, \"Only the minter can terminate the contract!\");\r\n        selfdestruct(payable(minter));\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\fisiere\\SmartContribute\\truffle\\contracts\\SmartContribute.sol",
  "ast": {
    "absolutePath": "project:/contracts/SmartContribute.sol",
    "exportedSymbols": {
      "SmartContribute": [
        354
      ]
    },
    "id": 355,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SmartContribute",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "60:102:0",
          "text": "@title SmartContribute: A contract for managing funds and bounties for open source contributions"
        },
        "fullyImplemented": true,
        "id": 354,
        "linearizedBaseContracts": [
          354
        ],
        "name": "SmartContribute",
        "nameLocation": "171:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "194:74:0",
              "text": "@notice The address of the contract deployer, also known as the minter"
            },
            "functionSelector": "07546172",
            "id": 5,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "289:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 354,
            "src": "274:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "274:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6,
              "nodeType": "StructuredDocumentation",
              "src": "302:60:0",
              "text": "@notice Mapping of GitHub IDs to issuer wallet addresses"
            },
            "id": 10,
            "mutability": "mutable",
            "name": "issuerWallets",
            "nameLocation": "403:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 354,
            "src": "368:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 9,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 7,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "376:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "368:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "386:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11,
              "nodeType": "StructuredDocumentation",
              "src": "423:64:0",
              "text": "@notice Mapping of GitHub IDs to available funds for issuers"
            },
            "functionSelector": "46c6e722",
            "id": 15,
            "mutability": "mutable",
            "name": "issuerFunds",
            "nameLocation": "527:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 354,
            "src": "493:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 14,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 12,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "501:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "493:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 13,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "511:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 16,
              "nodeType": "StructuredDocumentation",
              "src": "545:60:0",
              "text": "@notice Mapping of GitHub IDs to hunter wallet addresses"
            },
            "id": 20,
            "mutability": "mutable",
            "name": "hunterWallets",
            "nameLocation": "646:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 354,
            "src": "611:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 19,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 17,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "619:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "611:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "629:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 21,
              "nodeType": "StructuredDocumentation",
              "src": "666:54:0",
              "text": "@notice Mapping of issue IDs to available bounties"
            },
            "functionSelector": "7ee119ee",
            "id": 25,
            "mutability": "mutable",
            "name": "issueBounties",
            "nameLocation": "760:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 354,
            "src": "726:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 24,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 22,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "734:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "726:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 23,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "744:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "782:62:0",
              "text": "@notice Event emitted when funds are added to the contract"
            },
            "eventSelector": "8fe10ae416f22f5e5220b0018a6c1d4ff534d6aa3a471f2a20cb7747fe63e5b9",
            "id": 32,
            "name": "FundsAdded",
            "nameLocation": "856:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "by",
                  "nameLocation": "883:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "867:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "895:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "887:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "866:36:0"
            },
            "src": "850:53:0"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 33,
              "nodeType": "StructuredDocumentation",
              "src": "909:68:0",
              "text": "@notice Event emitted when funds are retracted from the contract"
            },
            "eventSelector": "3daf4eb29b0a47a5ad42f34b5f126843b185367beba424555d8f2434aa7143cd",
            "id": 39,
            "name": "FundsRetracted",
            "nameLocation": "989:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "by",
                  "nameLocation": "1020:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1004:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1032:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1024:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1003:36:0"
            },
            "src": "983:57:0"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "1155:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1166:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 44,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1175:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1179:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1175:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1166:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:19:0"
                }
              ]
            },
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "1048:87:0",
              "text": "@dev Constructor function initializes the contract with the address of the deployer"
            },
            "id": 49,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1152:2:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:0:0"
            },
            "scope": 354,
            "src": "1141:52:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "1406:511:0",
              "statements": [
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "1456:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 107,
                      "src": "1448:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1448:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59,
                  "initialValue": {
                    "expression": {
                      "id": 57,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1465:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1469:6:0",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1465:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1448:27:0"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60,
                        "name": "issuerWallets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1486:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 62,
                      "indexExpression": {
                        "id": 61,
                        "name": "gitId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1500:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1486:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 63,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1509:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1486:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 67,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1536:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1540:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1536:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1548:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1536:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526567697374726174696f6e2066656520697320696e636f72726563743b20706c6561736520636865636b20616e642074727920616761696e",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1551:59:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4fe07bfcf76a80823c5f1eaefbe7720d3fc10a5b53256a8cd5d96881afb62d53",
                          "typeString": "literal_string \"Registration fee is incorrect; please check and try again\""
                        },
                        "value": "Registration fee is incorrect; please check and try again"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4fe07bfcf76a80823c5f1eaefbe7720d3fc10a5b53256a8cd5d96881afb62d53",
                          "typeString": "literal_string \"Registration fee is incorrect; please check and try again\""
                        }
                      ],
                      "id": 66,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1528:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:83:0"
                },
                {
                  "assignments": [
                    75
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75,
                      "mutability": "mutable",
                      "name": "paymentAmount",
                      "nameLocation": "1675:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 107,
                      "src": "1667:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1667:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "expression": {
                      "id": 76,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1691:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1695:5:0",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "1691:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1667:33:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 79,
                        "name": "issuerFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1715:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 81,
                      "indexExpression": {
                        "id": 80,
                        "name": "gitId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1727:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1715:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1736:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1715:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91,
                  "nodeType": "IfStatement",
                  "src": "1711:90:0",
                  "trueBody": {
                    "id": 90,
                    "nodeType": "Block",
                    "src": "1739:62:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 84,
                            "name": "paymentAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "1754:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 85,
                              "name": "issuerFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "1771:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 87,
                            "indexExpression": {
                              "id": 86,
                              "name": "gitId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "1783:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1771:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1754:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "1754:35:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 92,
                        "name": "issuerFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1821:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 94,
                      "indexExpression": {
                        "id": 93,
                        "name": "gitId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1833:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1821:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 95,
                      "name": "paymentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1842:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1821:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:34:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1892:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartContribute_$354",
                              "typeString": "contract SmartContribute"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartContribute_$354",
                              "typeString": "contract SmartContribute"
                            }
                          ],
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1884:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1884:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1884:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1899:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1903:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1899:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 98,
                      "name": "FundsAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1873:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1873:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "EmitStatement",
                  "src": "1868:41:0"
                }
              ]
            },
            "documentation": {
              "id": 50,
              "nodeType": "StructuredDocumentation",
              "src": "1205:137:0",
              "text": "@notice Allows an issuer to fund their account with ETH or register upon first call\n @param gitId The GitHub ID of the issuer"
            },
            "functionSelector": "feee7707",
            "id": 108,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fundIssuer",
            "nameLocation": "1357:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "gitId",
                  "nameLocation": "1382:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1368:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1367:21:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:0"
            },
            "scope": 354,
            "src": "1348:569:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2331:333:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 119,
                            "name": "issuerFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2350:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 121,
                          "indexExpression": {
                            "id": 120,
                            "name": "gitId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2362:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2350:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2371:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2350:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d697373696e6720617661696c61626c652066756e64",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2374:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_299b448de32aeb3e7d0fe644f15ed9d2e0994602a41416e998c1fc59ec41d7c5",
                          "typeString": "literal_string \"Missing available fund\""
                        },
                        "value": "Missing available fund"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_299b448de32aeb3e7d0fe644f15ed9d2e0994602a41416e998c1fc59ec41d7c5",
                          "typeString": "literal_string \"Missing available fund\""
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2342:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2342:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "2342:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 128,
                            "name": "issuerFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2418:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 130,
                          "indexExpression": {
                            "id": 129,
                            "name": "gitId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2430:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2418:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 131,
                          "name": "bounty",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "2440:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2418:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e647321",
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2448:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a531843416d86fba93b800a44804953a0da265aecb2cfb6c4758e5242e81e2bd",
                          "typeString": "literal_string \"Not enough funds!\""
                        },
                        "value": "Not enough funds!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a531843416d86fba93b800a44804953a0da265aecb2cfb6c4758e5242e81e2bd",
                          "typeString": "literal_string \"Not enough funds!\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2410:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2410:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "2410:58:0"
                },
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 136,
                        "name": "issuerFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2481:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 138,
                      "indexExpression": {
                        "id": 137,
                        "name": "gitId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "2493:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2481:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 139,
                      "name": "bounty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "2503:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2481:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2481:28:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 142,
                        "name": "issueBounties",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2526:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 144,
                      "indexExpression": {
                        "id": 143,
                        "name": "issueId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2540:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2526:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2551:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2526:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 154,
                  "nodeType": "IfStatement",
                  "src": "2522:91:0",
                  "trueBody": {
                    "id": 153,
                    "nodeType": "Block",
                    "src": "2554:59:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 147,
                            "name": "bounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 115,
                            "src": "2569:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 148,
                              "name": "issueBounties",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "2579:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 150,
                            "indexExpression": {
                              "id": 149,
                              "name": "issueId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "2593:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2579:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2569:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "2569:32:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 155,
                        "name": "issueBounties",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2625:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 157,
                      "indexExpression": {
                        "id": 156,
                        "name": "issueId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "2639:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2625:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 158,
                      "name": "bounty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "2650:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2625:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2625:31:0"
                }
              ]
            },
            "documentation": {
              "id": 109,
              "nodeType": "StructuredDocumentation",
              "src": "1925:308:0",
              "text": "@notice Registers an issue and allocates a bounty to it (or adds to the existing)\n @param issueId The unique identifier of the issue\n @param gitId The GitHub ID of the issuer associated with the issue\n @param bounty The bounty amount to be allocated to the issue using Wei as unit"
            },
            "functionSelector": "e8097c80",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerIssue",
            "nameLocation": "2248:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "issueId",
                  "nameLocation": "2276:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2262:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "gitId",
                  "nameLocation": "2299:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2285:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "bounty",
                  "nameLocation": "2314:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2306:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2261:60:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2331:0:0"
            },
            "scope": 354,
            "src": "2239:425:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "2984:263:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 171,
                            "name": "issueBounties",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "3003:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 173,
                          "indexExpression": {
                            "id": 172,
                            "name": "issueId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "3017:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3003:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3028:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3003:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2066756e647320696e20697373756520626f756e7479",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3031:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb070efb216ce4cd561b7dbb2dcdf6e5ce5fbe7262881d9d2a05cb5c7d6c64c3",
                          "typeString": "literal_string \"No funds in issue bounty\""
                        },
                        "value": "No funds in issue bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb070efb216ce4cd561b7dbb2dcdf6e5ce5fbe7262881d9d2a05cb5c7d6c64c3",
                          "typeString": "literal_string \"No funds in issue bounty\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2995:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2995:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "2995:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 180,
                            "name": "issuerWallets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3077:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 182,
                          "indexExpression": {
                            "id": 181,
                            "name": "gitId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "3091:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3077:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3109:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3101:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3101:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3101:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3077:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49737375657220646f6573206e6f74206861766520612077616c6c6574",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3113:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c708fbb8b46af056e7e8e06a013787187f519ec4f2a20e38fdc437e4dd3992e3",
                          "typeString": "literal_string \"Issuer does not have a wallet\""
                        },
                        "value": "Issuer does not have a wallet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c708fbb8b46af056e7e8e06a013787187f519ec4f2a20e38fdc437e4dd3992e3",
                          "typeString": "literal_string \"Issuer does not have a wallet\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3069:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3069:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:76:0"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 191,
                        "name": "issuerFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "3158:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 193,
                      "indexExpression": {
                        "id": 192,
                        "name": "gitId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "3170:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3158:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 194,
                        "name": "issueBounties",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3180:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 196,
                      "indexExpression": {
                        "id": 195,
                        "name": "issueId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "3194:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3180:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3158:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3158:44:0"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 199,
                        "name": "issueBounties",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3213:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 201,
                      "indexExpression": {
                        "id": 200,
                        "name": "issueId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "3227:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3213:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3238:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3213:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3213:26:0"
                }
              ]
            },
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "2672:231:0",
              "text": "@notice Cancels a bounty associated with a specific issue and returns the fund to the issuer\n @param issueId The unique identifier of the issue\n @param gitId The GitHub ID of the issuer associated with the issue"
            },
            "functionSelector": "c586018d",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelBounty",
            "nameLocation": "2918:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "issueId",
                  "nameLocation": "2945:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2931:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2931:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "gitId",
                  "nameLocation": "2968:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2954:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2954:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2930:44:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2984:0:0"
            },
            "scope": 354,
            "src": "2909:338:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "3427:86:0",
              "statements": [
                {
                  "assignments": [
                    213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "3446:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "3438:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3438:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "expression": {
                      "id": 214,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3455:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3459:6:0",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3455:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3438:27:0"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 217,
                        "name": "hunterWallets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "3476:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 219,
                      "indexExpression": {
                        "id": 218,
                        "name": "gitId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 209,
                        "src": "3490:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3476:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 220,
                      "name": "caller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "3499:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3476:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3476:29:0"
                }
              ]
            },
            "documentation": {
              "id": 207,
              "nodeType": "StructuredDocumentation",
              "src": "3255:112:0",
              "text": "@notice Registers a hunter by storing their wallet address\n @param gitId The GitHub ID of the hunter"
            },
            "functionSelector": "2b6f0495",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerHunter",
            "nameLocation": "3382:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "gitId",
                  "nameLocation": "3411:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "3397:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3397:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3396:21:0"
            },
            "returnParameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3427:0:0"
            },
            "scope": 354,
            "src": "3373:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "3810:345:0",
              "statements": [
                {
                  "assignments": [
                    233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 233,
                      "mutability": "mutable",
                      "name": "hunter",
                      "nameLocation": "3829:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "3821:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 232,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3821:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 237,
                  "initialValue": {
                    "baseExpression": {
                      "id": 234,
                      "name": "hunterWallets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "3838:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 236,
                    "indexExpression": {
                      "id": 235,
                      "name": "hunterGitId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "3852:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3838:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3821:43:0"
                },
                {
                  "assignments": [
                    239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 239,
                      "mutability": "mutable",
                      "name": "bounty",
                      "nameLocation": "3883:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "3875:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 238,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3875:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 243,
                  "initialValue": {
                    "baseExpression": {
                      "id": 240,
                      "name": "issueBounties",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3892:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 242,
                    "indexExpression": {
                      "id": 241,
                      "name": "issueId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "3906:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3892:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3875:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 245,
                            "name": "hunter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "3935:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3953:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3945:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 246,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3945:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3945:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3935:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 251,
                            "name": "bounty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "3959:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3968:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3959:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3935:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d697373696e6720636c61696d696e672077616c6c6574206f7220626f756e7479",
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3971:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbc1022071d9f39301adbab71b301e30dce9979df47222891edc40028c87847d",
                          "typeString": "literal_string \"Missing claiming wallet or bounty\""
                        },
                        "value": "Missing claiming wallet or bounty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbc1022071d9f39301adbab71b301e30dce9979df47222891edc40028c87847d",
                          "typeString": "literal_string \"Missing claiming wallet or bounty\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3927:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3927:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "3927:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 263,
                        "name": "bounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "4053:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 260,
                            "name": "hunter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "4036:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4028:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 258,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4028:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4028:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4044:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4028:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4028:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "4028:32:0"
                },
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 266,
                        "name": "issueBounties",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "4073:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 268,
                      "indexExpression": {
                        "id": 267,
                        "name": "issueId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "4087:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4073:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4098:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4073:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "4073:26:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 273,
                        "name": "hunter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "4132:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 274,
                        "name": "bounty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "4140:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 272,
                      "name": "FundsRetracted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4117:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4117:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "EmitStatement",
                  "src": "4112:35:0"
                }
              ]
            },
            "documentation": {
              "id": 225,
              "nodeType": "StructuredDocumentation",
              "src": "3521:203:0",
              "text": "@notice Allows a hunter to claim the bounty for a specific issue\n @param issueId The unique identifier of the issue\n @param hunterGitId The GitHub ID of the hunter claiming the bounty"
            },
            "functionSelector": "9222dd26",
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimBounty",
            "nameLocation": "3739:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "issueId",
                  "nameLocation": "3765:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "3751:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3751:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "hunterGitId",
                  "nameLocation": "3788:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "3774:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3774:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3750:50:0"
            },
            "returnParameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3810:0:0"
            },
            "scope": 354,
            "src": "3730:425:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 332,
              "nodeType": "Block",
              "src": "4327:391:0",
              "statements": [
                {
                  "assignments": [
                    285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 285,
                      "mutability": "mutable",
                      "name": "wallet",
                      "nameLocation": "4346:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 332,
                      "src": "4338:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 284,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4338:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 289,
                  "initialValue": {
                    "baseExpression": {
                      "id": 286,
                      "name": "issuerWallets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "4355:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 288,
                    "indexExpression": {
                      "id": 287,
                      "name": "gitId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "4369:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4355:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4338:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 291,
                          "name": "wallet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "4394:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4412:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4404:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 292,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4404:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4404:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4394:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d697373696e6720636c61696d696e672077616c6c6574",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4416:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94fbd6fcac34285c51b97613d3f7aefc522279b84d15a7fb502a04bd8ecdba00",
                          "typeString": "literal_string \"Missing claiming wallet\""
                        },
                        "value": "Missing claiming wallet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94fbd6fcac34285c51b97613d3f7aefc522279b84d15a7fb502a04bd8ecdba00",
                          "typeString": "literal_string \"Missing claiming wallet\""
                        }
                      ],
                      "id": 290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4386:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4386:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4386:56:0"
                },
                {
                  "assignments": [
                    301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 301,
                      "mutability": "mutable",
                      "name": "availableFund",
                      "nameLocation": "4463:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 332,
                      "src": "4455:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4455:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 305,
                  "initialValue": {
                    "baseExpression": {
                      "id": 302,
                      "name": "issuerFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "4479:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 304,
                    "indexExpression": {
                      "id": 303,
                      "name": "gitId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "4491:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4479:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4455:42:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 307,
                          "name": "availableFund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "4516:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4532:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4516:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d697373696e6720617661696c61626c652066756e64",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4535:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_299b448de32aeb3e7d0fe644f15ed9d2e0994602a41416e998c1fc59ec41d7c5",
                          "typeString": "literal_string \"Missing available fund\""
                        },
                        "value": "Missing available fund"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_299b448de32aeb3e7d0fe644f15ed9d2e0994602a41416e998c1fc59ec41d7c5",
                          "typeString": "literal_string \"Missing available fund\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4508:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4508:52:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "4508:52:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 318,
                        "name": "availableFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "4598:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 315,
                            "name": "wallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "4581:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4573:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 313,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4573:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4573:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4589:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4573:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4573:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "4573:39:0"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 321,
                        "name": "issuerFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "4633:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 323,
                      "indexExpression": {
                        "id": 322,
                        "name": "gitId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "4645:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4633:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4654:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4633:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 328,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "4688:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 329,
                        "name": "availableFund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "4696:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 327,
                      "name": "FundsRetracted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4673:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4673:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "EmitStatement",
                  "src": "4668:42:0"
                }
              ]
            },
            "documentation": {
              "id": 279,
              "nodeType": "StructuredDocumentation",
              "src": "4163:109:0",
              "text": "@notice Allows an issuer to claim their available funds\n @param gitId The GitHub ID of the issuer"
            },
            "functionSelector": "89f7deed",
            "id": 333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimFund",
            "nameLocation": "4287:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "gitId",
                  "nameLocation": "4311:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 333,
                  "src": "4297:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4297:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4296:21:0"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4327:0:0"
            },
            "scope": 354,
            "src": "4278:440:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 352,
              "nodeType": "Block",
              "src": "4832:135:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 338,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4851:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4855:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4851:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 340,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "4865:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4851:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206d696e7465722063616e207465726d696e6174652074686520636f6e747261637421",
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4873:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a71be632453bb6e747bb1882d22e0306b0c05327f59ddc64f1df7d74221d5f7",
                          "typeString": "literal_string \"Only the minter can terminate the contract!\""
                        },
                        "value": "Only the minter can terminate the contract!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a71be632453bb6e747bb1882d22e0306b0c05327f59ddc64f1df7d74221d5f7",
                          "typeString": "literal_string \"Only the minter can terminate the contract!\""
                        }
                      ],
                      "id": 337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4843:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4843:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "4843:76:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 348,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "4951:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4943:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 346,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4943:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4943:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 345,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "4930:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4930:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "4930:29:0"
                }
              ]
            },
            "documentation": {
              "id": 334,
              "nodeType": "StructuredDocumentation",
              "src": "4726:72:0",
              "text": "@dev Terminates the contract and sends remaining funds to the minter"
            },
            "functionSelector": "0c08bf88",
            "id": 353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "terminate",
            "nameLocation": "4813:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4822:2:0"
            },
            "returnParameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4832:0:0"
            },
            "scope": 354,
            "src": "4804:163:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 355,
        "src": "162:4808:0",
        "usedErrors": []
      }
    ],
    "src": "33:4939:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xAB3f11C9512f3545ef10b9Cf3e4363931f09eCBB",
      "transactionHash": "0xa998951ca0bf04b9f858b6fe54b7d89ad030b041ca3c4af7a7d023fef32898d5"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-08T15:44:49.618Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "cancelBounty(string,string)": {
        "params": {
          "gitId": "The GitHub ID of the issuer associated with the issue",
          "issueId": "The unique identifier of the issue"
        }
      },
      "claimBounty(string,string)": {
        "params": {
          "hunterGitId": "The GitHub ID of the hunter claiming the bounty",
          "issueId": "The unique identifier of the issue"
        }
      },
      "claimFund(string)": {
        "params": {
          "gitId": "The GitHub ID of the issuer"
        }
      },
      "constructor": {
        "details": "Constructor function initializes the contract with the address of the deployer"
      },
      "fundIssuer(string)": {
        "params": {
          "gitId": "The GitHub ID of the issuer"
        }
      },
      "registerHunter(string)": {
        "params": {
          "gitId": "The GitHub ID of the hunter"
        }
      },
      "registerIssue(string,string,uint256)": {
        "params": {
          "bounty": "The bounty amount to be allocated to the issue using Wei as unit",
          "gitId": "The GitHub ID of the issuer associated with the issue",
          "issueId": "The unique identifier of the issue"
        }
      },
      "terminate()": {
        "details": "Terminates the contract and sends remaining funds to the minter"
      }
    },
    "title": "SmartContribute: A contract for managing funds and bounties for open source contributions",
    "version": 1
  },
  "userdoc": {
    "events": {
      "FundsAdded(address,uint256)": {
        "notice": "Event emitted when funds are added to the contract"
      },
      "FundsRetracted(address,uint256)": {
        "notice": "Event emitted when funds are retracted from the contract"
      }
    },
    "kind": "user",
    "methods": {
      "cancelBounty(string,string)": {
        "notice": "Cancels a bounty associated with a specific issue and returns the fund to the issuer"
      },
      "claimBounty(string,string)": {
        "notice": "Allows a hunter to claim the bounty for a specific issue"
      },
      "claimFund(string)": {
        "notice": "Allows an issuer to claim their available funds"
      },
      "fundIssuer(string)": {
        "notice": "Allows an issuer to fund their account with ETH or register upon first call"
      },
      "issueBounties(string)": {
        "notice": "Mapping of issue IDs to available bounties"
      },
      "issuerFunds(string)": {
        "notice": "Mapping of GitHub IDs to available funds for issuers"
      },
      "minter()": {
        "notice": "The address of the contract deployer, also known as the minter"
      },
      "registerHunter(string)": {
        "notice": "Registers a hunter by storing their wallet address"
      },
      "registerIssue(string,string,uint256)": {
        "notice": "Registers an issue and allocates a bounty to it (or adds to the existing)"
      }
    },
    "version": 1
  }
}